<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:MahApps.Metro.Controls" xmlns:converters="clr-namespace:MahApps.Metro.Converters">
  <Style x:Key="{x:Type Controls:Tile}" TargetType="{x:Type Controls:Tile}">
    <Setter Property="FrameworkElement.Width" Value="140" />
    <Setter Property="FrameworkElement.Height" Value="140" />
    <Setter Property="FrameworkElement.Margin" Value="3" />
    <Setter Property="Control.Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
    <Setter Property="Control.Background" Value="{DynamicResource AccentColorBrush}" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="UIElement.RenderTransformOrigin" Value="0.5,0.5" />
    <Setter Property="Controls:Tile.TitleFontSize" Value="16" />
    <Setter Property="Controls:Tile.CountFontSize" Value="28" />
    <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{x:Null}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Controls:Tile}">
          <Grid>
            <Border Name="PART_Border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}">
              <Grid Background="{TemplateBinding Control.Background}">
                <StackPanel VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Orientation="Horizontal">
                  <ContentPresenter RecognizesAccessKey="True" />
                  <TextBlock Text="{TemplateBinding Controls:Tile.Count}" VerticalAlignment="Center" TextBlock.FontSize="{Binding CountFontSize, RelativeSource={RelativeSource TemplatedParent}}" />
                </StackPanel>
                <Label HorizontalAlignment="Left" VerticalAlignment="Bottom" Foreground="{TemplateBinding Control.Foreground}">
                  <AccessText Foreground="{TemplateBinding Control.Foreground}" TextWrapping="Wrap" Margin="3" Text="{Binding Title, RelativeSource={RelativeSource TemplatedParent}}" FontSize="{Binding TitleFontSize, RelativeSource={RelativeSource TemplatedParent}}" />
                </Label>
              </Grid>
            </Border>
            <Border Name="PART_HoverBorder" BorderThickness="2" Opacity="0" BorderBrush="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush), Mode=OneWay}" />
          </Grid>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:ControlsHelper.MouseOverBorderBrush), Mode=OneWay, Converter={x:Static converters:IsNullConverter.Instance}}" Value="False" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver, Mode=OneWay}" Value="True" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PART_HoverBorder" Property="UIElement.Opacity" Value="0.6" />
            </MultiDataTrigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter Property="UIElement.RenderTransform">
                <Setter.Value>
                  <ScaleTransform ScaleX="0.98" ScaleY="0.98" CenterX="0.5" CenterY="0.5" />
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Property="UIElement.Opacity" Value=".55" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>