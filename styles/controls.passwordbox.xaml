<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:MahApps.Metro.Controls" xmlns:Behaviors="clr-namespace:MahApps.Metro.Behaviours" xmlns:Converters="clr-namespace:MahApps.Metro.Converters">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/小喵谷登入器;component/Styles/Shared.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <Converters:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter" />
  <Converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter" />
  <Converters:StringToVisibilityConverter x:Key="StringToOppositeVisibilityConverter" OppositeStringValue="True" />
  <Grid x:Key="RevealButtonIcon" Background="{DynamicResource BlackBrush}" Opacity="0.8" Width="16" Height="16">
    <Grid.OpacityMask>
      <VisualBrush>
        <VisualBrush.Visual>
          <Canvas Height="25.8461" Width="42">
            <Path Canvas.Left="17" Canvas.Top="25.0769" Stretch="Fill" Data="F1M38,33.1538C40.6765,33.1538 42.8462,35.3235 42.8462,38 42.8462,40.6765 40.6765,42.8461 38,42.8461 35.3235,42.8461 33.1539,40.6765 33.1539,38 33.1539,35.3235 35.3236,33.1538 38,33.1538z M38,25.0769C49.3077,25.0769 59,33.1538 59,38 59,42.8461 49.3077,50.9231 38,50.9231 26.6923,50.9231 17,42.8461 17,38 17,33.1538 26.6923,25.0769 38,25.0769z M38,29.1154C33.0932,29.1154 29.1154,33.0932 29.1154,38 29.1154,42.9068 33.0932,46.8846 38,46.8846 42.9068,46.8846 46.8846,42.9068 46.8846,38 46.8846,33.0932 42.9068,29.1154 38,29.1154z" Fill="#FF000000" />
          </Canvas>
        </VisualBrush.Visual>
      </VisualBrush>
    </Grid.OpacityMask>
  </Grid>
  <Style x:Key="RevealButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Border Name="PasswordRevealIconEyeBorder" Background="#00FFFFFF" Margin="1,1,3,1" BorderThickness="{TemplateBinding Control.BorderThickness}">
              <Rectangle Name="IconEye" Width="20" Height="15" VerticalAlignment="Center" Margin="3,0" HorizontalAlignment="Center" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                <Rectangle.OpacityMask>
                  <VisualBrush Stretch="Fill" Visual="{StaticResource RevealButtonIcon}" />
                </Rectangle.OpacityMask>
              </Rectangle>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Value="True" Binding="{Binding ElementName=PasswordRevealIconEyeBorder, Path=IsMouseOver}">
              <Setter TargetName="PasswordRevealIconEyeBorder" Property="Border.Background" Value="#FFDCDCDC" />
            </DataTrigger>
            <DataTrigger Value="True" Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}">
              <Setter TargetName="PasswordRevealIconEyeBorder" Value="{DynamicResource BlackBrush}" Property="Border.Background" />
              <Setter TargetName="IconEye" Value="{DynamicResource WhiteBrush}" Property="Shape.Fill" />
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Win8MetroPasswordBox" TargetType="{x:Type PasswordBox}">
    <Setter Property="FrameworkElement.ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
    <Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True" />
    <Setter Property="Controls:ControlsHelper.ButtonWidth" Value="22" />
    <Setter Property="PasswordBox.PasswordChar" Value="●" />
    <Setter Property="PasswordBox.SelectionBrush" Value="{DynamicResource HighlightBrush}" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}" />
    <Setter Property="Control.FontSize" Value="15" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="FrameworkElement.MinHeight" Value="26" />
    <Setter Property="Control.Background" Value="{DynamicResource ControlBackgroundBrush}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="Control.Padding" Value="4,1,4,1" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
    <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}" />
    <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}" />
    <Setter Property="UIElement.AllowDrop" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="enterGotFocus">
              <DoubleAnimation Duration="0:0:0.2" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TextBoxHint" />
            </Storyboard>
            <Storyboard x:Key="exitGotFocus">
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TextBoxHint" />
            </Storyboard>
            <Storyboard x:Key="enterHasText">
              <DoubleAnimation Duration="0:0:0.2" From=".2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TextBoxHint" />
            </Storyboard>
            <Storyboard x:Key="exitHasText">
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TextBoxHint" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid Margin="0" VerticalAlignment="Stretch">
            <Rectangle Name="Base" Stroke="{TemplateBinding Control.BorderBrush}" Opacity="1" Fill="{TemplateBinding Control.Background}" StrokeThickness="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}}" />
            <Rectangle Name="FocusRectangle" Visibility="Collapsed" StrokeThickness="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}}" />
            <Grid VerticalAlignment="Stretch" Margin="0">
              <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
              </Grid.RowDefinitions>
              <ScrollViewer Name="PART_ContentHost" Margin="0" Padding="0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
              <TextBox Name="RevealedPassword" Grid.Column="0" Grid.Row="0" Text="{TemplateBinding Behaviors:PasswordBoxBindingBehavior.Password}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="Stretch" VerticalContentAlignment="Stretch" Margin="1,1,1,1" Padding="-1,1,1,1" FontSize="15" BorderBrush="#00FFFFFF" Visibility="Hidden" BorderThickness="1" IsReadOnly="True" />
              <TextBlock Name="TextBoxHint" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" Grid.Column="0" Grid.Row="0" TextBlock.FontSize="15" Padding="6,0,6,0" Margin="2,0,2,0" IsHitTestVisible="False" Opacity="0.6" Cursor="IBeam" TextBlock.Foreground="{TemplateBinding Control.Foreground}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Visibility="{Binding ElementName=RevealedPassword, Path=Text, Converter={StaticResource StringToOppositeVisibilityConverter}}" />
              <Button Name="RevealButton" Grid.Column="1" Grid.Row="0" SnapsToDevicePixels="True" Style="{StaticResource RevealButtonStyle}" Visibility="{Binding ElementName=RevealedPassword, Path=Text, Converter={StaticResource StringToVisibilityConverter}}" />
            </Grid>
            <Rectangle Name="DisabledVisualElement" Stroke="{DynamicResource ControlsDisabledBrush}" Fill="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" StrokeThickness="{TemplateBinding BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}" Property="Control.Foreground" />
              <Setter TargetName="RevealButton" Property="UIElement.Opacity" Value="0.5" />
              <Setter TargetName="TextBoxHint" Property="TextBlock.Text" Value="{disabled} " />
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="0.6" />
            </Trigger>
            <DataTrigger Value="True" Binding="{Binding ElementName=RevealButton, Path=IsPressed}">
              <Setter TargetName="RevealedPassword" Property="UIElement.Visibility" Value="Visible" />
              <Setter Property="Control.Foreground" Value="#00FFFFFF" />
              <Setter Property="PasswordBox.PasswordChar" Value=" " />
            </DataTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="FocusRectangle" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="FocusRectangle" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="FocusRectangle" Property="UIElement.Visibility" Value="Visible" />
              <Setter TargetName="FocusRectangle" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" Property="Shape.Stroke" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Controls:TextBoxHelper.HasText" Value="False" />
                <Condition Property="UIElement.IsFocused" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}" />
              </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterHasText}" />
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitHasText}" />
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="True">
              <Setter TargetName="Base" Property="UIElement.Effect">
                <Setter.Value>
                  <DropShadowEffect ShadowDepth="0" Color="{DynamicResource BlackColor}" Opacity="0" BlurRadius="10" />
                </Setter.Value>
              </Setter>
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation From="0" To="1" Storyboard.TargetName="Base" Storyboard.TargetProperty="(Effect).Opacity" Duration="00:00:02" AutoReverse="True" RepeatBehavior="Forever" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
              <Setter TargetName="Base" Value="{x:Null}" Property="UIElement.Effect" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Grid x:Key="DefaultCapsLockIcon" Background="{DynamicResource BlackBrush}" Opacity="0.8" Width="16" Height="16">
    <Grid.OpacityMask>
      <VisualBrush>
        <VisualBrush.Visual>
          <Canvas Width="24" Height="24">
            <Path Data="M13,14L11,14 11,10 13,10 M13,18L11,18 11,16 13,16 M1,21L23,21 12,2 1,21z" Fill="#FF000000" />
          </Canvas>
        </VisualBrush.Visual>
      </VisualBrush>
    </Grid.OpacityMask>
  </Grid>
  <Style x:Key="MetroPasswordBox" TargetType="{x:Type PasswordBox}">
    <Setter Property="Controls:PasswordBoxHelper.CapsLockIcon" Value="{StaticResource DefaultCapsLockIcon}" />
    <Setter Property="FrameworkElement.ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
    <Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True" />
    <Setter Property="Controls:ControlsHelper.ButtonWidth" Value="22" />
    <Setter Property="PasswordBox.SelectionBrush" Value="{DynamicResource HighlightBrush}" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource ContentFontSize}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="FrameworkElement.MinHeight" Value="26" />
    <Setter Property="Control.Background" Value="{DynamicResource ControlBackgroundBrush}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="Control.Padding" Value="0" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
    <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}" />
    <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}" />
    <Setter Property="PasswordBox.CaretBrush" Value="{DynamicResource BlackBrush}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="enterGotFocus">
              <DoubleAnimation Duration="0:0:0.2" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
            <Storyboard x:Key="exitGotFocus">
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
            <Storyboard x:Key="enterHasText">
              <DoubleAnimation Duration="0:0:0.2" From=".2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
            <Storyboard x:Key="exitHasText">
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Border Name="Base" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" />
            <Grid Margin="2">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Name="ButtonColumn" Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Name="ButtonRow" Height="*" />
              </Grid.RowDefinitions>
              <ScrollViewer Name="PART_ContentHost" Grid.Column="0" Grid.Row="1" BorderThickness="0" IsTabStop="False" Margin="2" VerticalAlignment="Stretch" Background="{x:Null}" />
              <TextBlock Name="PART_Message" Grid.Column="0" Grid.Row="1" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" Padding="{TemplateBinding Control.Padding}" Visibility="Collapsed" TextBlock.Foreground="{TemplateBinding Control.Foreground}" IsHitTestVisible="False" Opacity="0.6" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="6,2,6,2" />
              <ContentControl Name="PART_FloatingMessageContainer" Style="{DynamicResource FloatingMessageContainerStyle}" Grid.Column="0" Grid.ColumnSpan="2">
                <TextBlock Name="PART_FloatingMessage" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextBlock.Foreground="{TemplateBinding Control.Foreground}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" />
              </ContentControl>
              <Button Name="PART_ClearText" Grid.Column="2" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}" FontSize="16" Foreground="{TemplateBinding Control.Foreground}" IsTabStop="False" FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ButtonFontFamily), Mode=OneWay}" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ButtonContent), Mode=OneWay}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ButtonWidth), Mode=OneWay}" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay}" />
              <ContentPresenter Name="PART_CapsLockIndicator" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Margin="1" TextBlock.Foreground="{DynamicResource ControlsValidationBrush}" VerticalAlignment="Center" HorizontalAlignment="Right" Visibility="Collapsed" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:PasswordBoxHelper.CapsLockIcon), Mode=TwoWay}" ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:PasswordBoxHelper.CapsLockWarningToolTip), Mode=OneWay}" />
            </Grid>
            <Border Name="DisabledVisualElement" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Value="" Binding="{Binding RelativeSource={RelativeSource Self}, Path=Password, Mode=OneWay}">
              <Setter TargetName="PART_Message" Property="UIElement.Visibility" Value="Visible" />
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" Property="Border.BorderBrush" />
              <Setter TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}" Property="TextBlock.Foreground" />
              <Setter TargetName="PART_FloatingMessage" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}" Property="Control.Background" />
              <Setter TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}" Property="Control.Foreground" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}" Property="Control.Background" />
              <Setter TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}" Property="Control.Foreground" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Controls:TextBoxHelper.HasText" Value="False" />
                <Condition Property="UIElement.IsFocused" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}" />
              </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
              <Setter TargetName="PART_Message" Property="UIElement.Visibility" Value="Visible" />
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterHasText}" />
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitHasText}" />
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MetroButtonPasswordBox" TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MetroPasswordBox}">
    <Setter Property="Controls:TextBoxHelper.ButtonTemplate" Value="{DynamicResource ChromelessButtonTemplate}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="enterGotFocus">
              <DoubleAnimation Duration="0:0:0.2" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
            <Storyboard x:Key="exitGotFocus">
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
            <Storyboard x:Key="enterHasText">
              <DoubleAnimation Duration="0:0:0.2" From=".2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
            <Storyboard x:Key="exitHasText">
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Border Name="Base" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" />
            <Grid Name="PART_InnerGrid" Margin="2">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Name="ButtonColumn" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ButtonWidth), Mode=OneWay}" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Name="ButtonRow" Height="*" />
              </Grid.RowDefinitions>
              <ScrollViewer Name="PART_ContentHost" Grid.Column="0" Grid.Row="1" BorderThickness="0" IsTabStop="False" Margin="2" VerticalAlignment="Stretch" Background="{x:Null}" />
              <TextBlock Name="PART_Message" Grid.Column="0" Grid.Row="1" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" Padding="{TemplateBinding Control.Padding}" Visibility="Collapsed" TextBlock.Foreground="{TemplateBinding Control.Foreground}" IsHitTestVisible="False" Opacity="0.6" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="6,2,6,2" />
              <ContentControl Name="PART_FloatingMessageContainer" Style="{DynamicResource FloatingMessageContainerStyle}" Grid.Column="0" Grid.ColumnSpan="2">
                <TextBlock Name="PART_FloatingMessage" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextBlock.Foreground="{TemplateBinding Control.Foreground}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" />
              </ContentControl>
              <Button Name="PART_ClearText" Grid.Column="2" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}" FontSize="16" Foreground="{TemplateBinding Control.Foreground}" IsTabStop="False" FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ButtonFontFamily), Mode=OneWay}" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ButtonContent), Mode=OneWay}" Template="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ButtonTemplate), Mode=OneWay}" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="True" />
              <ContentPresenter Name="PART_CapsLockIndicator" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Margin="1" TextBlock.Foreground="{DynamicResource ControlsValidationBrush}" VerticalAlignment="Center" HorizontalAlignment="Right" Visibility="Collapsed" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:PasswordBoxHelper.CapsLockIcon), Mode=TwoWay}" ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:PasswordBoxHelper.CapsLockWarningToolTip), Mode=OneWay}" />
            </Grid>
            <Border Name="DisabledVisualElement" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Value="" Binding="{Binding RelativeSource={RelativeSource Self}, Path=Password, Mode=OneWay}">
              <Setter TargetName="PART_Message" Property="UIElement.Visibility" Value="Visible" />
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" Property="Border.BorderBrush" />
              <Setter TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}" Property="TextBlock.Foreground" />
              <Setter TargetName="PART_FloatingMessage" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}" Property="Control.Background" />
              <Setter TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}" Property="Control.Foreground" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}" Property="Control.Background" />
              <Setter TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}" Property="Control.Foreground" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Controls:TextBoxHelper.HasText" Value="False" />
                <Condition Property="UIElement.IsFocused" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}" />
              </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
              <Setter TargetName="PART_Message" Property="UIElement.Visibility" Value="Visible" />
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterHasText}" />
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitHasText}" />
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MetroButtonRevealedPasswordBox" TargetType="{x:Type PasswordBox}" BasedOn="{StaticResource MetroPasswordBox}">
    <Setter Property="Controls:TextBoxHelper.ButtonTemplate" Value="{DynamicResource ChromelessButtonTemplate}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="enterGotFocus">
              <DoubleAnimation Duration="0:0:0.2" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
            <Storyboard x:Key="exitGotFocus">
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
            <Storyboard x:Key="enterHasText">
              <DoubleAnimation Duration="0:0:0.2" From=".2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
            <Storyboard x:Key="exitHasText">
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Border Name="Base" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" />
            <Grid Name="PART_InnerGrid" Margin="2">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Name="ButtonColumn" Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Name="ButtonRow" Height="*" />
              </Grid.RowDefinitions>
              <ScrollViewer Name="PART_ContentHost" Grid.Column="0" Grid.Row="1" BorderThickness="0" IsTabStop="False" Margin="2" VerticalAlignment="Stretch" Background="{x:Null}" />
              <TextBox Name="RevealedPassword" Grid.Column="0" Grid.Row="1" Text="{TemplateBinding Behaviors:PasswordBoxBindingBehavior.Password}" BorderBrush="#00FFFFFF" Visibility="Collapsed" BorderThickness="1" IsReadOnly="True" />
              <TextBlock Name="PART_Message" Grid.Column="0" Grid.Row="1" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" Padding="{TemplateBinding Control.Padding}" Visibility="Collapsed" TextBlock.Foreground="{TemplateBinding Control.Foreground}" IsHitTestVisible="False" Opacity="0.6" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="6,2,6,2" />
              <ContentControl Name="PART_FloatingMessageContainer" Style="{DynamicResource FloatingMessageContainerStyle}" Grid.Column="0" Grid.ColumnSpan="2">
                <TextBlock Name="PART_FloatingMessage" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextBlock.Foreground="{TemplateBinding Control.Foreground}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" />
              </ContentControl>
              <Button Name="PART_RevealButton" Grid.Column="2" Grid.RowSpan="2" Style="{StaticResource RevealButtonStyle}" SnapsToDevicePixels="True" Foreground="{TemplateBinding Control.Foreground}" IsTabStop="False" Visibility="{Binding ElementName=RevealedPassword, Path=Text, Converter={StaticResource StringToVisibilityConverter}}" />
              <ContentPresenter Name="PART_CapsLockIndicator" Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Margin="1" TextBlock.Foreground="{DynamicResource ControlsValidationBrush}" VerticalAlignment="Center" HorizontalAlignment="Right" Visibility="Collapsed" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:PasswordBoxHelper.CapsLockIcon), Mode=TwoWay}" ToolTip="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:PasswordBoxHelper.CapsLockWarningToolTip), Mode=OneWay}" />
            </Grid>
            <Border Name="DisabledVisualElement" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Value="" Binding="{Binding RelativeSource={RelativeSource Self}, Path=Password, Mode=OneWay}">
              <Setter TargetName="PART_Message" Property="UIElement.Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Value="True" Binding="{Binding ElementName=PART_RevealButton, Path=IsPressed}">
              <Setter TargetName="RevealedPassword" Property="UIElement.Visibility" Value="Visible" />
              <Setter Value="{DynamicResource AccentColorBrush}" Property="Control.Foreground" />
              <Setter Property="PasswordBox.PasswordChar" Value=" " />
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" Property="Border.BorderBrush" />
              <Setter TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}" Property="TextBlock.Foreground" />
              <Setter TargetName="PART_FloatingMessage" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger SourceName="PART_RevealButton" Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="PART_RevealButton" Value="{DynamicResource GrayBrush8}" Property="Control.Background" />
              <Setter TargetName="PART_RevealButton" Value="{DynamicResource AccentColorBrush}" Property="Control.Foreground" />
            </Trigger>
            <Trigger SourceName="PART_RevealButton" Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="PART_RevealButton" Value="{DynamicResource BlackBrush}" Property="Control.Background" />
              <Setter TargetName="PART_RevealButton" Value="{DynamicResource WhiteBrush}" Property="Control.Foreground" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Controls:TextBoxHelper.HasText" Value="False" />
                <Condition Property="UIElement.IsFocused" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}" />
              </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
              <Setter TargetName="PART_Message" Property="UIElement.Visibility" Value="Visible" />
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterHasText}" />
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitHasText}" />
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>