<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Controls="clr-namespace:MahApps.Metro.Controls" xmlns:Converters="clr-namespace:MahApps.Metro.Converters">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/小喵谷登入器;component/Styles/Shared.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <Converters:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter" />
  <Style x:Key="MetroTextBox" TargetType="{x:Type TextBox}">
    <Setter Property="FrameworkElement.ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
    <Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True" />
    <Setter Property="Controls:ControlsHelper.ButtonWidth" Value="22" />
    <Setter Property="TextBoxBase.SelectionBrush" Value="{DynamicResource HighlightBrush}" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource ContentFontSize}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="FrameworkElement.MinHeight" Value="26" />
    <Setter Property="Control.Background" Value="{DynamicResource ControlBackgroundBrush}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="Control.Padding" Value="0" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
    <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}" />
    <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}" />
    <Setter Property="TextBoxBase.CaretBrush" Value="{DynamicResource BlackBrush}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="enterGotFocus">
              <DoubleAnimation Duration="0:0:0.2" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
            <Storyboard x:Key="exitGotFocus">
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
            <Storyboard x:Key="enterHasText">
              <DoubleAnimation Duration="0:0:0.2" From=".2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
            <Storyboard x:Key="exitHasText">
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Border Name="Base" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" />
            <Grid Name="PART_InnerGrid" Margin="2">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Name="TextColumn" Width="*" />
                <ColumnDefinition Name="ButtonColumn" Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Name="ButtonRow" Height="*" />
              </Grid.RowDefinitions>
              <Border Name="ReadOnlyVisualElement" Grid.Row="1" Grid.ColumnSpan="2" Opacity="0" Background="{x:Null}" />
              <ScrollViewer Name="PART_ContentHost" Grid.Column="0" Grid.Row="1" BorderThickness="0" IsTabStop="False" Margin="2" VerticalAlignment="Stretch" Background="{x:Null}" />
              <TextBlock Name="PART_Message" Grid.Column="0" Grid.Row="1" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" Padding="{TemplateBinding Control.Padding}" Visibility="Collapsed" TextBlock.Foreground="{TemplateBinding Control.Foreground}" IsHitTestVisible="False" Opacity="0.6" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="6,2,6,2" />
              <ContentControl Name="PART_FloatingMessageContainer" Style="{DynamicResource FloatingMessageContainerStyle}" Grid.Column="0" Grid.ColumnSpan="2">
                <TextBlock Name="PART_FloatingMessage" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextBlock.Foreground="{TemplateBinding Control.Foreground}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" />
              </ContentControl>
              <Button Name="PART_ClearText" Grid.Column="1" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}" FontSize="16" Foreground="{TemplateBinding Control.Foreground}" IsTabStop="False" FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ButtonFontFamily), Mode=OneWay}" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ButtonContent), Mode=OneWay}" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ButtonWidth), Mode=OneWay}" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ClearTextButton), Mode=OneWay}" />
            </Grid>
            <Border Name="DisabledVisualElement" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Value="Left" Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}">
              <Setter TargetName="PART_ClearText" Property="Grid.Column" Value="0" />
              <Setter TargetName="PART_Message" Property="Grid.Column" Value="1" />
              <Setter TargetName="TextColumn" Property="ColumnDefinition.Width" Value="Auto" />
              <Setter TargetName="ButtonColumn" Property="ColumnDefinition.Width" Value="*" />
              <Setter TargetName="PART_ContentHost" Property="Grid.Column" Value="1" />
            </DataTrigger>
            <DataTrigger Value="" Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}">
              <Setter TargetName="PART_Message" Property="UIElement.Visibility" Value="Visible" />
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}" Value="Right" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ClearTextButton)}" Value="False" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="PART_ContentHost" Property="Grid.ColumnSpan" Value="2" />
              <Setter TargetName="PART_Message" Property="Grid.ColumnSpan" Value="2" />
            </MultiDataTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="TextBoxBase.IsReadOnly" Value="True">
              <Setter TargetName="PART_ClearText" Property="UIElement.IsEnabled" Value="False" />
              <Setter TargetName="ReadOnlyVisualElement" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" Property="Border.BorderBrush" />
              <Setter TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}" Property="TextBlock.Foreground" />
              <Setter TargetName="PART_FloatingMessage" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}" Property="Control.Background" />
              <Setter TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}" Property="Control.Foreground" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}" Property="Control.Background" />
              <Setter TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}" Property="Control.Foreground" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Controls:TextBoxHelper.HasText" Value="False" />
                <Condition Property="UIElement.IsFocused" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterGotFocus}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitGotFocus}" />
              </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource enterHasText}" />
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource exitHasText}" />
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="True">
              <Setter TargetName="Base" Property="UIElement.Effect">
                <Setter.Value>
                  <DropShadowEffect ShadowDepth="0" Color="{DynamicResource BlackColor}" Opacity="0" BlurRadius="10" />
                </Setter.Value>
              </Setter>
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation From="0" To="1" Storyboard.TargetName="Base" Storyboard.TargetProperty="(Effect).Opacity" Duration="00:00:02" AutoReverse="True" RepeatBehavior="Forever" />
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
              <Setter TargetName="Base" Value="{x:Null}" Property="UIElement.Effect" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MetroButtonTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MetroTextBox}">
    <Setter Property="Controls:TextBoxHelper.ButtonTemplate" Value="{DynamicResource ChromelessButtonTemplate}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="enterGotFocus">
              <DoubleAnimation Duration="0:0:0.2" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
            <Storyboard x:Key="exitGotFocus">
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
            <Storyboard x:Key="enterHasText">
              <DoubleAnimation Duration="0:0:0.2" From=".2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
            <Storyboard x:Key="exitHasText">
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <Border Name="Base" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" />
            <Grid Name="PART_InnerGrid" Margin="2">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Name="TextColumn" Width="*" />
                <ColumnDefinition Name="ButtonColumn" Width="Auto" />
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Name="ButtonRow" Height="*" />
              </Grid.RowDefinitions>
              <Border Name="ReadOnlyVisualElement" Grid.ColumnSpan="2" Grid.Row="1" Opacity="0" Background="{x:Null}" />
              <ScrollViewer Name="PART_ContentHost" Grid.Column="0" Grid.Row="1" BorderThickness="0" IsTabStop="False" Margin="2" VerticalAlignment="Stretch" Background="{x:Null}" />
              <TextBlock Name="PART_Message" Grid.Column="0" Grid.Row="1" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" Padding="{TemplateBinding Control.Padding}" Visibility="Collapsed" TextBlock.Foreground="{TemplateBinding Control.Foreground}" IsHitTestVisible="False" Opacity="0.6" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="6,2,6,2" />
              <ContentControl Name="PART_FloatingMessageContainer" Style="{DynamicResource FloatingMessageContainerStyle}" Grid.Column="0" Grid.ColumnSpan="2">
                <TextBlock Name="PART_FloatingMessage" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextBlock.Foreground="{TemplateBinding Control.Foreground}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" />
              </ContentControl>
              <Button Name="PART_ClearText" Grid.Column="1" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}" FontSize="16" Foreground="{TemplateBinding Control.Foreground}" IsTabStop="False" FontFamily="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ButtonFontFamily), Mode=OneWay}" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ButtonContent), Mode=OneWay}" Template="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.ButtonTemplate), Mode=OneWay}" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.ButtonWidth), Mode=OneWay}" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="True" />
            </Grid>
            <Border Name="DisabledVisualElement" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Value="Left" Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.ButtonsAlignment)}">
              <Setter TargetName="PART_ClearText" Property="Grid.Column" Value="0" />
              <Setter TargetName="PART_Message" Property="Grid.Column" Value="1" />
              <Setter TargetName="TextColumn" Property="ColumnDefinition.Width" Value="Auto" />
              <Setter TargetName="ButtonColumn" Property="ColumnDefinition.Width" Value="*" />
              <Setter TargetName="PART_ContentHost" Property="Grid.Column" Value="1" />
            </DataTrigger>
            <DataTrigger Value="" Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}">
              <Setter TargetName="PART_Message" Property="UIElement.Visibility" Value="Visible" />
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True" />
                <Condition Binding="{Binding Path=(Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True" />
              </MultiDataTrigger.Conditions>
              <MultiDataTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource ShowFloatingMessageStoryboard}" />
              </MultiDataTrigger.EnterActions>
              <MultiDataTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource HideFloatingMessageStoryboard}" />
              </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TextBox.TextWrapping" Value="NoWrap" />
                <Condition Property="TextBoxBase.AcceptsReturn" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_ClearText" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualHeight, Mode=OneWay}" Property="FrameworkElement.Width" />
            </MultiTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="TextBoxBase.IsReadOnly" Value="True">
              <Setter TargetName="ReadOnlyVisualElement" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" Property="Border.BorderBrush" />
              <Setter TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}" Property="TextBlock.Foreground" />
              <Setter TargetName="PART_FloatingMessage" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}" Property="Control.Background" />
              <Setter TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}" Property="Control.Foreground" />
            </Trigger>
            <Trigger SourceName="PART_ClearText" Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}" Property="Control.Background" />
              <Setter TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ButtonCommandMetroTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MetroButtonTextBox}" />
  <Style x:Key="SearchMetroTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MetroButtonTextBox}">
    <Setter Property="Controls:TextBoxHelper.ButtonTemplate">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Background="{TemplateBinding Control.Background}">
            <Grid Name="contentPresenter" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Opacity="0.75">
              <Canvas Width="15" Height="15" Clip="F1M0,0L48,0 48,48 0,48 0,0">
                <Path Width="15.7781" Height="15.7781" Stretch="Fill" Fill="{TemplateBinding Control.Foreground}" Data="F1M14.8076,31.1139L20.0677,25.9957C19.3886,24.8199 19.25,23.4554 19.25,22 19.25,17.5817 22.5817,14 27,14 31.4183,14 35,17.5817 35,22 35,26.4183 31.4183,29.75 27,29.75 25.6193,29.75 24.3204,29.6502 23.1868,29.0345L17.8861,34.1924C17.105,34.9734 15.5887,34.9734 14.8076,34.1924 14.0266,33.4113 14.0266,31.895 14.8076,31.1139z M27,17C24.2386,17 22,19.2386 22,22 22,24.7614 24.2386,27 27,27 29.7614,27 32,24.7614 32,22 32,19.2386 29.7614,17 27,17z" />
              </Canvas>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="1" />
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="False">
              <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value=".5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MetroRichTextBox" TargetType="{x:Type RichTextBox}">
    <Style.Resources>
      <Style TargetType="{x:Type Hyperlink}" BasedOn="{StaticResource {x:Type Hyperlink}}">
        <Setter Property="TextElement.Foreground" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="Inline.TextDecorations" Value="Underline" />
        <Style.Triggers>
          <Trigger Property="ContentElement.IsMouseOver" Value="True">
            <Setter Property="TextElement.Foreground" Value="{DynamicResource HighlightBrush}" />
          </Trigger>
          <Trigger Property="ContentElement.IsEnabled" Value="False">
            <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
          </Trigger>
          <Trigger Property="ContentElement.IsEnabled" Value="True">
            <Setter Property="FrameworkContentElement.Cursor" Value="Hand" />
          </Trigger>
        </Style.Triggers>
      </Style>
    </Style.Resources>
    <Setter Property="FrameworkElement.ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
    <Setter Property="TextBoxBase.SelectionBrush" Value="{DynamicResource HighlightBrush}" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource ContentFontSize}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="FrameworkElement.MinHeight" Value="26" />
    <Setter Property="FrameworkElement.MinWidth" Value="10" />
    <Setter Property="Control.Background" Value="{DynamicResource ControlBackgroundBrush}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
    <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}" />
    <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
    <Setter Property="Control.Padding" Value="1" />
    <Setter Property="UIElement.AllowDrop" Value="True" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <Grid>
            <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
              <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
            </Border>
            <Border Name="DisabledVisualElement" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Bd" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="Bd" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="0.6" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>