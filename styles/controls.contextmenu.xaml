<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:System="clr-namespace:System;assembly=mscorlib">
  <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />
  <Geometry x:Key="Checkmark">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
  <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
  <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
  <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
  <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Control.Background" Value="{DynamicResource MenuBackgroundBrush}" />
    <Setter Property="Control.IsTabStop" Value="False" />
    <Setter Property="FrameworkElement.Margin" Value="6,2,6,2" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Grid Margin="0,6,0,4" SnapsToDevicePixels="True">
            <Rectangle Fill="#FFE0E0E0" Height="1" Margin="20,0,1,1" />
            <Rectangle Fill="#FFFFFFFF" Height="1" Margin="20,1,1,0" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MetroMenu" TargetType="{x:Type Menu}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
    <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
    <Setter Property="Control.Background" Value="{DynamicResource MenuBackgroundBrush}" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource MenuFontSize}" />
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
            <ItemsPresenter Margin="0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MetroContextMenu" TargetType="{x:Type ContextMenu}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
    <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
    <Setter Property="Control.Background" Value="{DynamicResource ContextMenuBackgroundBrush}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource ContextMenuBorderBrush}" />
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
    <Setter Property="Grid.IsSharedSizeScope" Value="True" />
    <Setter Property="ContextMenu.HasDropShadow" Value="True" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource ContextMenuFontSize}" />
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContextMenu}">
          <Grid>
            <Rectangle Name="LayoutRoot" Fill="{TemplateBinding Control.Background}" />
            <Border Name="Border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
              <ScrollViewer Name="SubMenuScrollViewer" ScrollViewer.CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" Margin="0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" />
              </ScrollViewer>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ContextMenu.HasDropShadow" Value="True">
              <Setter TargetName="LayoutRoot" Property="UIElement.Effect">
                <Setter.Value>
                  <DropShadowEffect Color="{DynamicResource MenuShadowColor}" BlurRadius="4" ShadowDepth="2" Direction="315" Opacity="0.3" />
                </Setter.Value>
              </Setter>
              <Setter TargetName="LayoutRoot" Property="FrameworkElement.Margin" Value="0,0,6,6" />
              <Setter TargetName="Border" Property="FrameworkElement.Margin" Value="0,0,6,6" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MetroMenuItem" TargetType="{x:Type MenuItem}">
    <Setter Property="Control.HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Control.VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
    <Setter Property="Control.Background" Value="{DynamicResource MenuItemBackgroundBrush}" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
    <Style.Triggers>
      <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
        <Setter Property="Control.Padding" Value="7,5,8,6" />
        <Setter Property="Control.Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="TopLevelItem">
        <Setter Property="Control.Padding" Value="7,5,8,6" />
        <Setter Property="Control.Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
        <Setter Property="Control.Padding" Value="2,6,2,6" />
        <Setter Property="Control.Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}" />
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="SubmenuItem">
        <Setter Property="Control.Padding" Value="2,6,2,6" />
      </Trigger>
    </Style.Triggers>
  </Style>
  <ContextMenu x:Key="TextBoxMetroContextMenu" Style="{StaticResource MetroContextMenu}">
    <MenuItem Command="ApplicationCommands.Cut" Style="{DynamicResource MetroMenuItem}" />
    <MenuItem Command="ApplicationCommands.Copy" Style="{DynamicResource MetroMenuItem}" />
    <MenuItem Command="ApplicationCommands.Paste" Style="{DynamicResource MetroMenuItem}" />
  </ContextMenu>
  <Style x:Key="MenuScrollButton" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
    <Setter Property="ButtonBase.ClickMode" Value="Hover" />
    <Setter Property="FrameworkElement.MinWidth" Value="0" />
    <Setter Property="FrameworkElement.MinHeight" Value="0" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <DockPanel Background="#00FFFFFF" SnapsToDevicePixels="True">
            <Rectangle Name="R1" DockPanel.Dock="Right" Fill="#00FFFFFF" Width="1" />
            <Rectangle Name="B1" DockPanel.Dock="Bottom" Fill="#00FFFFFF" Height="1" />
            <Rectangle Name="L1" DockPanel.Dock="Left" Fill="#00FFFFFF" Width="1" />
            <Rectangle Name="T1" DockPanel.Dock="Top" Fill="#00FFFFFF" Height="1" />
            <ContentPresenter Name="ContentContainer" HorizontalAlignment="Center" Margin="6" VerticalAlignment="Center" />
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="R1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Property="Shape.Fill" />
              <Setter TargetName="B1" Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" Property="Shape.Fill" />
              <Setter TargetName="L1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Property="Shape.Fill" />
              <Setter TargetName="T1" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" Property="Shape.Fill" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition Height="*" />
              <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Border Grid.Column="0" Grid.Row="1">
              <ScrollContentPresenter Margin="{TemplateBinding Control.Padding}" />
            </Border>
            <RepeatButton Grid.Column="0" Command="{x:Static ScrollBar.LineUpCommand}" Focusable="False" Grid.Row="0" Style="{StaticResource MenuScrollButton}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <RepeatButton.Visibility>
                <MultiBinding ConverterParameter="0" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                  <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
              </RepeatButton.Visibility>
              <Path Data="{StaticResource UpArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
            </RepeatButton>
            <RepeatButton Grid.Column="0" Command="{x:Static ScrollBar.LineDownCommand}" Focusable="False" Grid.Row="2" Style="{StaticResource MenuScrollButton}" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <RepeatButton.Visibility>
                <MultiBinding ConverterParameter="100" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                  <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                </MultiBinding>
              </RepeatButton.Visibility>
              <Path Data="{StaticResource DownArrow}" Fill="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
            </RepeatButton>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}" TargetType="{x:Type ContentControl}">
    <Border BorderBrush="{DynamicResource SubMenuBorderBrush}" BorderThickness="1" Background="{DynamicResource SubMenuBackgroundBrush}">
      <ContentPresenter />
    </Border>
  </ControlTemplate>
  <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="True">
      <Rectangle Name="Bg" Fill="{TemplateBinding Control.Background}" Margin="1" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" />
      <DockPanel>
        <ContentPresenter Name="Icon" ContentSource="Icon" Margin="4,0,6,0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" />
        <Path Name="GlyphPanel" Data="{StaticResource Checkmark}" Fill="{DynamicResource CheckmarkFill}" FlowDirection="LeftToRight" Visibility="Collapsed" Margin="8,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
        <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
      </DockPanel>
      <Popup Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-1" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
        <Grid>
          <Rectangle Name="LayoutRoot" Fill="{TemplateBinding Control.Background}" />
          <ContentControl Name="SubMenuBorder" IsTabStop="False" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
            <ScrollViewer Name="SubMenuScrollViewer" ScrollViewer.CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
              <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" Margin="0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" />
            </ScrollViewer>
          </ContentControl>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
        <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
      </Trigger>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
        <Setter TargetName="LayoutRoot" Property="UIElement.Effect">
          <Setter.Value>
            <DropShadowEffect Color="{DynamicResource MenuShadowColor}" BlurRadius="4" ShadowDepth="2" Direction="315" Opacity="0.3" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="LayoutRoot" Property="FrameworkElement.Margin" Value="0,0,6,6" />
        <Setter TargetName="SubMenuBorder" Property="FrameworkElement.Margin" Value="0,0,6,6" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="Bg" Value="{DynamicResource TopMenuItemSelectionStroke}" Property="Shape.Stroke" />
      </Trigger>
      <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
        <Setter TargetName="Bg" Value="{DynamicResource TopMenuItemPressedStroke}" Property="Shape.Stroke" />
        <Setter TargetName="Bg" Value="{DynamicResource TopMenuItemPressedFill}" Property="Shape.Fill" />
      </Trigger>
      <Trigger Property="MenuItem.IsSubmenuOpen" Value="True">
        <Setter TargetName="Bg" Value="{DynamicResource TopMenuItemPressedStroke}" Property="Shape.Stroke" />
        <Setter TargetName="Bg" Value="{DynamicResource TopMenuItemPressedFill}" Property="Shape.Fill" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Value="{DynamicResource DisabledMenuItemForeground}" Property="Control.Foreground" />
        <Setter TargetName="GlyphPanel" Value="{DynamicResource DisabledMenuItemGlyphPanel}" Property="Shape.Fill" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="True">
      <Rectangle Name="Bg" Fill="{TemplateBinding Control.Background}" Margin="1" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" />
      <DockPanel>
        <ContentPresenter Name="Icon" ContentSource="Icon" Margin="4,0,6,0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" />
        <Path Name="GlyphPanel" Data="{StaticResource Checkmark}" Fill="{DynamicResource CheckmarkFill}" FlowDirection="LeftToRight" Visibility="Collapsed" Margin="8,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
        <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
      </DockPanel>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="Bg" Value="{DynamicResource TopMenuItemSelectionStroke}" Property="Shape.Stroke" />
      </Trigger>
      <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
        <Setter TargetName="Bg" Value="{DynamicResource TopMenuItemPressedStroke}" Property="Shape.Stroke" />
        <Setter TargetName="Bg" Value="{DynamicResource TopMenuItemPressedFill}" Property="Shape.Fill" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Value="{DynamicResource DisabledMenuItemForeground}" Property="Control.Foreground" />
        <Setter TargetName="GlyphPanel" Value="{DynamicResource DisabledMenuItemGlyphPanel}" Property="Shape.Fill" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="True">
      <Rectangle Name="Bg" Fill="{TemplateBinding Control.Background}" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" />
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto" />
          <ColumnDefinition Width="4" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="6" />
          <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto" />
          <ColumnDefinition Width="17" />
        </Grid.ColumnDefinitions>
        <ContentPresenter Name="Icon" ContentSource="Icon" Margin="1" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" />
        <Path Name="GlyphPanel" Data="{StaticResource Checkmark}" Fill="{DynamicResource CheckmarkFill}" FlowDirection="LeftToRight" Visibility="Collapsed" Margin="5,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
        <ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        <TextBlock Grid.Column="4" Margin="{TemplateBinding Control.Padding}" Text="{TemplateBinding MenuItem.InputGestureText}" Visibility="Collapsed" />
        <Path Grid.Column="5" Data="{StaticResource RightArrow}" Fill="{DynamicResource RightArrowFill}" Margin="4,0,0,0" VerticalAlignment="Center" />
      </Grid>
      <Popup Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
        <Grid>
          <Rectangle Name="LayoutRoot" Fill="{TemplateBinding Control.Background}" />
          <ContentControl Name="SubMenuBorder" IsTabStop="False" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
            <ScrollViewer Name="SubMenuScrollViewer" ScrollViewer.CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
              <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" Margin="0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" />
            </ScrollViewer>
          </ContentControl>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="True">
        <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None" />
      </Trigger>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="True">
        <Setter TargetName="LayoutRoot" Property="UIElement.Effect">
          <Setter.Value>
            <DropShadowEffect Color="{DynamicResource MenuShadowColor}" BlurRadius="4" ShadowDepth="2" Direction="315" Opacity="0.3" />
          </Setter.Value>
        </Setter>
        <Setter TargetName="LayoutRoot" Property="FrameworkElement.Margin" Value="0,0,6,6" />
        <Setter TargetName="SubMenuBorder" Property="FrameworkElement.Margin" Value="0,0,6,6" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="Bg" Value="{DynamicResource MenuItemSelectionFill}" Property="Shape.Fill" />
        <Setter TargetName="Bg" Value="{DynamicResource MenuItemSelectionStroke}" Property="Shape.Stroke" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Value="{DynamicResource DisabledMenuItemForeground}" Property="Control.Foreground" />
        <Setter TargetName="GlyphPanel" Value="{DynamicResource DisabledMenuItemGlyphPanel}" Property="Shape.Fill" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
    <Grid SnapsToDevicePixels="True">
      <Rectangle Name="Bg" Fill="{TemplateBinding Control.Background}" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" />
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition MinWidth="24" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto" />
          <ColumnDefinition Width="4" />
          <ColumnDefinition Width="*" />
          <ColumnDefinition Width="6" />
          <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto" />
          <ColumnDefinition Width="17" />
        </Grid.ColumnDefinitions>
        <ContentPresenter Name="Icon" ContentSource="Icon" Margin="1" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center" />
        <Path Name="GlyphPanel" Data="{StaticResource Checkmark}" Fill="{DynamicResource CheckmarkFill}" FlowDirection="LeftToRight" Visibility="Collapsed" Margin="5,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
        <ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        <TextBlock Grid.Column="4" Margin="{TemplateBinding Control.Padding}" Text="{TemplateBinding MenuItem.InputGestureText}" />
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsChecked" Value="True">
        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible" />
        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
      </Trigger>
      <Trigger Property="MenuItem.IsHighlighted" Value="True">
        <Setter TargetName="Bg" Value="{DynamicResource MenuItemSelectionFill}" Property="Shape.Fill" />
        <Setter TargetName="Bg" Value="{DynamicResource MenuItemSelectionStroke}" Property="Shape.Stroke" />
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="False">
        <Setter Value="{DynamicResource DisabledMenuItemForeground}" Property="Control.Foreground" />
        <Setter TargetName="GlyphPanel" Value="{DynamicResource DisabledMenuItemGlyphPanel}" Property="Shape.Fill" />
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
</ResourceDictionary>