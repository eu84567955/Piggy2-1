<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:Controls="clr-namespace:MahApps.Metro.Controls">
  <Style x:Key="MetroRadioButton" TargetType="{x:Type RadioButton}">
    <Setter Property="Control.Foreground" Value="{DynamicResource LabelTextBrush}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource ContentFontSize}" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}" />
    <Setter Property="Control.HorizontalContentAlignment" Value="Left" />
    <Setter Property="Control.VerticalContentAlignment" Value="Center" />
    <Setter Property="Control.Padding" Value="6,0,0,0" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource CheckBoxBrush}" />
    <Setter Property="Control.Background" Value="{DynamicResource WhiteBrush}" />
    <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource HighlightBrush}" />
    <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource CheckBoxMouseOverBrush}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="Disabled">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" />
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="CheckStates">
                <VisualState x:Name="Checked">
                  <Storyboard>
                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Checked1" />
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Unchecked" />
                <VisualState x:Name="Indeterminate" />
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Name="LeftCol" Width="18" />
              <ColumnDefinition Name="RightCol" Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Name="PART_CHECKBOX">
              <Rectangle Fill="{DynamicResource TransparentWhiteBrush}" Margin="-6,0" />
              <Ellipse Name="normal" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="{TemplateBinding Control.BorderThickness}" Fill="{TemplateBinding Control.Background}" Width="18" Height="18" />
              <Ellipse Name="Checked1" Fill="{DynamicResource HighlightBrush}" Opacity="0" Width="10" Height="10" />
              <Ellipse Name="disabled" Opacity="0" StrokeThickness="{TemplateBinding Control.BorderThickness}" Fill="{DynamicResource SemiTransparentWhiteBrush}" Width="18" Height="18" />
            </Grid>
            <ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Content="{TemplateBinding ContentControl.Content}" RecognizesAccessKey="True" Grid.Column="1" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="{TemplateBinding Control.Padding}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="normal" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="normal" Value="{DynamicResource HighlightBrush}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="normal" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" Property="Shape.Stroke" />
            </Trigger>
            <Trigger Property="Controls:ToggleButtonHelper.ContentDirection" Value="RightToLeft">
              <Setter Property="Control.Padding" Value="0,0,6,0" />
              <Setter TargetName="LeftCol" Property="ColumnDefinition.Width" Value="*" />
              <Setter TargetName="RightCol" Property="ColumnDefinition.Width" Value="18" />
              <Setter TargetName="PART_CHECKBOX" Property="Grid.Column" Value="1" />
              <Setter TargetName="contentPresenter" Property="Grid.Column" Value="0" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>