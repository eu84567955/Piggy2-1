<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:Controls="clr-namespace:MahApps.Metro.Controls" xmlns:Converters="clr-namespace:MahApps.Metro.Converters">
  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
  <Converters:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter" />
  <Style x:Key="MetroDatePicker" TargetType="{x:Type DatePicker}">
    <Setter Property="Control.Background" Value="{DynamicResource ControlBackgroundBrush}" />
    <Setter Property="Control.BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
    <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}" />
    <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
    <Setter Property="Control.BorderThickness" Value="1" />
    <Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource ContentFontSize}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="FrameworkElement.MinHeight" Value="26" />
    <Setter Property="DatePicker.IsTodayHighlighted" Value="True" />
    <Setter Property="Control.Padding" Value="0" />
    <Setter Property="DatePicker.SelectedDateFormat" Value="Short" />
    <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
    <Setter Property="DatePicker.CalendarStyle" Value="{DynamicResource MetroCalendar}" />
    <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePicker}">
          <Grid Name="PART_Root">
            <Border Name="Base" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{TemplateBinding Control.Background}" />
            <Grid Name="PART_InnerGrid" Margin="2">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}}, Path=ActualHeight, Mode=OneWay}" />
              </Grid.ColumnDefinitions>
              <Button Name="PART_Button" Grid.Column="1" Style="{DynamicResource ChromelessButtonStyle}" Foreground="{TemplateBinding Control.Foreground}" IsTabStop="False">
                <Path Stretch="Uniform" Data="F1M11.0017,36.005L11.0017,14.002 14.0021,14.002 14.0021,11.0015 19.0028,11.0015 19.0028,14.002 28.0039,14.002 28.0039,11.0015 33.0046,11.0015 33.0046,14.002 36.005,14.002 36.005,36.005 11.0017,36.005z M13.0019,34.0048L34.0047,34.0048 34.0047,19.0027 13.0019,19.0027 13.0019,34.0048z M16.5024,12.5017C15.95,12.5017 15.5022,13.1734 15.5022,14.0019 15.5022,14.8304 15.95,15.5021 16.5024,15.5021 17.0547,15.5021 17.5025,14.8304 17.5025,14.0019 17.5025,13.1734 17.0547,12.5017 16.5024,12.5017z M30.5,12.4998C29.9476,12.4998 29.4999,13.1715 29.4999,14 29.4999,14.8286 29.9476,15.5002 30.5,15.5002 31.0524,15.5002 31.5001,14.8286 31.5001,14 31.5001,13.1715 31.0524,12.4998 30.5,12.4998z M20.5994,33.0046L18.1154,33.0046 18.1154,23.7987C17.2116,24.7375,16.1471,25.4314,14.9217,25.8803L14.9217,23.3868C15.5686,23.179 16.2709,22.7857 17.0287,22.2069 17.7864,21.628 18.3067,20.9527 18.5895,20.1809L20.5994,20.1809 20.5994,33.0046z M27.874,33.0046L27.874,30.5111 22.7286,30.5111 22.7286,28.3822 28.2039,20.359 30.358,20.359 30.358,28.3738 31.9548,28.3738 31.9548,30.5111 30.358,30.5111 30.358,33.0046 27.874,33.0046z M27.874,28.3738L27.874,24.2551 25.0601,28.3738 27.874,28.3738z" Fill="{Binding ElementName=PART_Button, Path=Foreground, Mode=OneWay}">
                  <Path.Width>
                    <Binding Path="FontSize" Converter="{x:Static Converters:FontSizeOffsetConverter.Instance}" RelativeSource="{RelativeSource TemplatedParent}">
                      <Binding.ConverterParameter>
                        <System:Double>4</System:Double>
                      </Binding.ConverterParameter>
                    </Binding>
                  </Path.Width>
                  <Path.Height>
                    <Binding Path="FontSize" Converter="{x:Static Converters:FontSizeOffsetConverter.Instance}" RelativeSource="{RelativeSource TemplatedParent}">
                      <Binding.ConverterParameter>
                        <System:Double>4</System:Double>
                      </Binding.ConverterParameter>
                    </Binding>
                  </Path.Height>
                </Path>
              </Button>
              <DatePickerTextBox Name="PART_TextBox" Grid.Column="0" CaretBrush="{DynamicResource BlackBrush}" ContextMenu="{DynamicResource TextBoxMetroContextMenu}" Foreground="{TemplateBinding Control.Foreground}" Focusable="{TemplateBinding UIElement.Focusable}" FontSize="{TemplateBinding Control.FontSize}" HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}" Controls:TextBoxHelper.Watermark="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:TextBoxHelper.Watermark), Mode=OneWay}" />
              <Popup Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" StaysOpen="False" PlacementTarget="{Binding ElementName=PART_Root}" />
            </Grid>
            <Border Name="DisabledVisualElement" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding Control.BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="True">
              <Setter TargetName="Base" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" Property="Border.BorderBrush" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
              <Setter TargetName="DisabledVisualElement" Property="UIElement.Opacity" Value="0.6" />
            </Trigger>
            <Trigger SourceName="PART_Button" Property="UIElement.IsMouseOver" Value="True">
              <Setter TargetName="PART_Button" Value="{DynamicResource GrayBrush8}" Property="Control.Background" />
              <Setter TargetName="PART_Button" Value="{DynamicResource AccentColorBrush}" Property="Control.Foreground" />
            </Trigger>
            <Trigger SourceName="PART_Button" Property="ButtonBase.IsPressed" Value="True">
              <Setter TargetName="PART_Button" Value="{DynamicResource BlackBrush}" Property="Control.Background" />
              <Setter TargetName="PART_Button" Value="{DynamicResource WhiteBrush}" Property="Control.Foreground" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="MetroDatePickerTextBox" TargetType="{x:Type DatePickerTextBox}">
    <Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True" />
    <Setter Property="Control.Background" Value="{DynamicResource ControlBackgroundBrush}" />
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
    <Setter Property="Control.FontFamily" Value="{DynamicResource ContentFontFamily}" />
    <Setter Property="Control.FontSize" Value="{DynamicResource ContentFontSize}" />
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrush}" />
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
          <ControlTemplate.Resources>
            <Storyboard x:Key="EnterGotFocus">
              <DoubleAnimation Duration="0:0:0.2" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark" />
              <DoubleAnimation Duration="0:0:0.2" To=".2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
            <Storyboard x:Key="ExitGotFocus">
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark" />
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
            <Storyboard x:Key="EnterHasText">
              <DoubleAnimation Duration="0:0:0.2" From=".2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark" />
              <DoubleAnimation Duration="0:0:0.2" From=".2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
            <Storyboard x:Key="ExitHasText">
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark" />
              <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message" />
            </Storyboard>
          </ControlTemplate.Resources>
          <Grid>
            <ScrollViewer Name="PART_ContentHost" BorderThickness="0" IsTabStop="False" Margin="2,2,20,2" VerticalAlignment="Stretch" Background="{x:Null}" FocusVisualStyle="{x:Null}" />
            <ContentControl Name="PART_Watermark" Focusable="False" IsHitTestVisible="False" Opacity="0.6" Padding="2" Margin="6,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Foreground="{TemplateBinding Control.Foreground}" Visibility="Hidden" />
            <TextBlock Name="PART_Message" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextBlock.Foreground="{TemplateBinding Control.Foreground}" IsHitTestVisible="False" Opacity="0.6" HorizontalAlignment="Left" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="4,0,0,0" Padding="2" />
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Controls:TextBoxHelper.HasText" Value="False" />
                <Condition Property="UIElement.IsFocused" Value="True" />
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource EnterGotFocus}" />
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource ExitGotFocus}" />
              </MultiTrigger.ExitActions>
            </MultiTrigger>
            <DataTrigger Value="{x:Static System:String.Empty}" Binding="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.Watermark)}">
              <Setter TargetName="PART_Watermark" Property="UIElement.Visibility" Value="Visible" />
            </DataTrigger>
            <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard Storyboard="{StaticResource EnterHasText}" />
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard Storyboard="{StaticResource ExitHasText}" />
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>